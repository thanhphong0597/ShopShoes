// <auto-generated />
using DoAnTotNghiep.Models.Service;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DoAnTotNghiep.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DoAnTotNghiep.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Joden"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Navada"
                        });
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.GenericShoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Category_ID")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_ID");

                    b.ToTable("GenericShoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category_ID = 1,
                            Details = "...",
                            Name = "Nike so 1"
                        },
                        new
                        {
                            Id = 2,
                            Category_ID = 1,
                            Details = "...",
                            Name = "Nike so 2"
                        },
                        new
                        {
                            Id = 3,
                            Category_ID = 2,
                            Details = "...",
                            Name = "Joden so 1"
                        });
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Sizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Specific_Shoes", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("GenericShoes_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GenericShoes_ID");

                    b.ToTable("SpecificShoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.SupportTable.SpecificShoes_Colors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Colors_ID")
                        .HasColumnType("int");

                    b.Property<int>("SpecificShoes_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Colors_ID");

                    b.HasIndex("SpecificShoes_ID");

                    b.ToTable("SpecificShoes_Colors");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.SupportTable.SpecificShoes_Sizes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Sizes_ID")
                        .HasColumnType("int");

                    b.Property<int>("SpecificShoes_ID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Sizes_ID");

                    b.HasIndex("SpecificShoes_ID");

                    b.ToTable("SpecificShoes_Sizes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.GenericShoes", b =>
                {
                    b.HasOne("DoAnTotNghiep.Models.Category", "Category")
                        .WithMany("GenericShoes")
                        .HasForeignKey("Category_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Specific_Shoes", b =>
                {
                    b.HasOne("DoAnTotNghiep.Models.GenericShoes", "GenericShoes")
                        .WithMany("Specific_Shoes")
                        .HasForeignKey("GenericShoes_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GenericShoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.SupportTable.SpecificShoes_Colors", b =>
                {
                    b.HasOne("DoAnTotNghiep.Models.Colors", "Color")
                        .WithMany("SpecificShoes_Colors")
                        .HasForeignKey("Colors_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnTotNghiep.Models.Specific_Shoes", "Specific_Shoes")
                        .WithMany("SpecificShoes_Colors")
                        .HasForeignKey("SpecificShoes_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Specific_Shoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.SupportTable.SpecificShoes_Sizes", b =>
                {
                    b.HasOne("DoAnTotNghiep.Models.Sizes", "Sizes")
                        .WithMany("SpecificShoes_Sizes")
                        .HasForeignKey("Sizes_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DoAnTotNghiep.Models.Specific_Shoes", "Specific_Shoes")
                        .WithMany("SpecificShoes_Sizes")
                        .HasForeignKey("SpecificShoes_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sizes");

                    b.Navigation("Specific_Shoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Category", b =>
                {
                    b.Navigation("GenericShoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Colors", b =>
                {
                    b.Navigation("SpecificShoes_Colors");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.GenericShoes", b =>
                {
                    b.Navigation("Specific_Shoes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Sizes", b =>
                {
                    b.Navigation("SpecificShoes_Sizes");
                });

            modelBuilder.Entity("DoAnTotNghiep.Models.Specific_Shoes", b =>
                {
                    b.Navigation("SpecificShoes_Colors");

                    b.Navigation("SpecificShoes_Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
